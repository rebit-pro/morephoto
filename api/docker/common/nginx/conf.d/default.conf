server {
    listen 80;
    server_name orteka.loc www.orteka.loc;
    charset utf-8;
    index index.php;
    root /app/public;
    resolver 127.0.0.11 valid=10s;
    client_max_body_size 1000M;

    location /health {
        add_header Content-Type text/plain;
        return 200 'alive';
    }

    # Задаём переменную с многократно используемым параметром PHP-FPM
    set $php_pass api-php-fpm:9000;

    # Базовый fallback: если нет файла/папки — в Bitrix URL router
    location / {
        try_files $uri $uri/ /bitrix/routing_index.php$is_args$args;
    }

    # Статика (исключаем API, чтобы не мешать заголовкам)
    location ~* \.(?:jpg|jpeg|gif|png|svg|avif|webp|css|js|mp3|ogg|mpe?g|zip|gz|bz2?|rar|swf|xml|txt)$ {
        try_files $uri =404;
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=31536000";
    }

    # PHP
    location ~ \.php$ {
        fastcgi_pass api-php-fpm:9000;
        fastcgi_index index.php;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTP_HOST $host;
        fastcgi_param SERVER_NAME $host;
        fastcgi_param HTTP_COOKIE $http_cookie;

        # ПРОБРОС ТОКЕНА
        fastcgi_pass_header Authorization;
        fastcgi_param HTTP_AUTHORIZATION $http_authorization;

        fastcgi_param HTTPS on;
        fastcgi_param HTTP_X_FORWARDED_PROTO https;

        fastcgi_pass_header Set-Cookie;
    }

    # Защита служебных путей Bitrix
    location ~* /(bitrix/modules|bitrix/managed_cache|bitrix/local_cache|bitrix/stack_cache|bitrix/backup|bitrix/tmp|upload/support/not_image|bitrix/php_interface|local/php_interface) {
        deny all;
        log_not_found off;
        access_log off;
    }

    location ~ ^/(?:\.htaccess) { deny all; }
    location ~ (/\.|(?!(.*)ajax.php)/bitrix/modules|/upload/support/not_image|/bitrix/php_interface) { deny all; }

     # Проксируем только запросы к изображениям
    location ~* \.(jpg|jpeg|png|gif|webp|svg)$ {
        proxy_pass https://orteka.ru;

        # Устанавливаем правильные заголовки
        proxy_set_header Host orteka.ru;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Отключаем кеширование для разработки (опционально)
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
}